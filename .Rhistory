for (i in 1:length(x)){
if (x[i] != x[i+1] & !is.null(x[i+1])){
print(x)
switchList[i] <- noquote(paste(x[i],x[i+1]))
}
return(switchList)
}
}
switch(v)
switch <- function(x) {
switchList = list()
h <- unlist(dat["H"])
x <- as.integer((c(0, h, 0) == 0))
for (i in 1:length(x)){
if (x[i] != x[i+1] & !is.null(x[i+1])){
#print(x)
switchList[i] <- noquote(paste(x[i],x[i+1]))
}
return(switchList)
}
}
switch(v)
switch <- function(x) {
switchList = list()
h <- unlist(dat["H"])
x <- as.integer((c(0, h, 0) == 0))
for (i in 1:length(x)){
if (x[i] != x[i+1] & !is.null(x[i+1])){
print(switchList)
switchList[i] <- noquote(paste(x[i],x[i+1]))
}
return(switchList)
}
}
switch(v)
switch <- function(x) {
switchList = list()
h <- unlist(dat["H"])
x <- as.integer((c(0, h, 0) == 0))
for (i in 1:length(x)){
if (x[i] != x[i+1] & !is.null(x[i+1])){
switchList[i] <- noquote(paste(x[i],x[i+1]))
print(switchList)
}
return(switchList)
}
}
switch(v)
switch <- function(x) {
switchList = list()
h <- unlist(dat["H"])
x <- as.integer((c(0, h, 0) == 0))
for (i in 1:length(x)){
if (x[i] != x[i+1] & !is.null(x[i+1])){
switchList[i] <- noquote(paste(x[i],x[i+1]))
print(i)
}
return(switchList)
}
}
switch(v)
switch <- function(x) {
switchList = list()
h <- unlist(dat["H"])
x <- as.integer((c(0, h, 0) == 0))
for (i in 1:length(x)){
if (x[i] != x[i+1] & !is.null(x[i+1])){
print(x)
switchList[i] <- noquote(paste(x[i],x[i+1]))
}
return(switchList)
}
}
switch(v)
switch <- function(x) {
switchList = list()
h <- unlist(dat["H"])
x <- as.integer((c(0, h, 0) == 0))
for (i in 1:length(x)){
if (x[i] != x[i+1] & !is.null(x[i+1])){
print(x)
switchList[i] <- noquote(paste(x))
}
return(switchList)
}
}
switch(v)
switch <- function(x) {
switchList = list()
h <- unlist(dat["H"])
x <- as.integer((c(0, h, 0) == 0))
for (i in 1:length(x)){
if (x[i] != x[i+1] & !is.null(x[i+1])){
print(x)
switchList[i] <- x
}
return(switchList)
}
}
switch(v)
switch <- function(x) {
switchList = list()
h <- unlist(dat["H"])
x <- as.integer((c(0, h, 0) == 0))
for (i in 1:length(x)){
if (x[i] != x[i+1] & !is.null(x[i+1])){
print(x)
switchList[i] <- x[i]
}
return(switchList)
}
}
switch(v)
switch <- function(x) {
switchList = list()
h <- unlist(dat["H"])
x <- as.integer((c(0, h, 0) == 0))
for (i in 1:length(x)){
if (x[i] != x[i+1] & !is.null(x[i+1])){
print(x)
switchList[i] <- x[i+1]
}
return(switchList)
}
}
switch(v)
switch <- function(x) {
switchList = list()
h <- unlist(dat["H"])
x <- as.integer((c(0, h, 0) == 0))
for (i in 1:length(x)){
if (x[i] != x[i+1] & !is.null(x[i+1])){
#print(x)
switchList[i] <- x[i+1]
}
return(switchList)
}
}
switch(v)
switch <- function(x) {
switchList = list()
h <- unlist(dat["H"])
x <- as.integer((c(0, h, 0) == 0))
for (i in 1:length(x)){
if (x[i] != x[i+1] & !is.null(x[i+1])){
switchList[i] <- noquote(paste(x[i],x[i+1]))
}
return(switchList)
}
}
switch(v)
switch <- function(x) {
switchList = list()
h <- unlist(dat["H"])
x <- as.integer((c(0, h, 0) == 0))
for (i in 1:length(x)){
if (x[i] != x[i+1] & !is.null(x[i+1])){
switchList[i] <- noquote(paste(x[i],x[i+1]))
}
}
return(switchList)
}
switch(v)
switch <- function(x) {
switchList = list()
h <- unlist(dat["H"])
x <- as.integer((c(0, h, 0) == 0))
for (i in 1:length(x)){
if (x[i] != x[i+1] & (!is.null(x[i+1]) || x[i+1] == '')){
switchList[i] <- noquote(paste(x[i],x[i+1]))
}
}
return(switchList)
}
switch(v)
switch <- function(x) {
switchList = list()
h <- unlist(dat["H"])
x <- as.integer((c(0, h, 0) == 0))
for (i in 1:length(x)){
if (x[i] != x[i+1] & (is.null(x[i+1]) || x[i+1] == '')){
switchList[i] <- noquote(paste(x[i],x[i+1]))
}
}
return(switchList)
}
switch(v)
switch <- function(x) {
switchList = list()
h <- unlist(dat["H"])
x <- as.integer((c(0, h, 0) == 0))
for (i in 1:length(x)){
if (x[i] != x[i+1] & (!is.null(x[i+1]) || x[i+1] != '')){
switchList[i] <- noquote(paste(x[i],x[i+1]))
}
}
return(switchList)
}
switch(v)
switch <- function(x) {
switchList = list()
h <- unlist(dat["H"])
x <- as.integer((c(0, h, 0) == 0))
for (i in 1:length(x)){
if (x[i] != x[i+1] & (!is.null(x[i+1]) && x[i+1] != '')){
switchList[i] <- noquote(paste(x[i],x[i+1]))
}
}
return(switchList)
}
switch(v)
switch <- function(x) {
switchList = list()
h <- unlist(dat["H"])
x <- as.integer((c(0, h, 0) == 0))
for (i in 1:length(x)){
if (x[i] != x[i+1]){
if (!is.null(x[i+1]) && x[i+1] != '')
switchList[i] <- noquote(paste(x[i],x[i+1]))
}
}
return(switchList)
}
switch(v)
switch <- function(x) {
switchList = list()
h <- unlist(dat["H"])
x <- as.integer((c(0, h, 0) == 0))
for (i in 1:length(x)){
if (!is.null(x[i+1]) && x[i+1] != '')
if (x[i] != x[i+1]){
switchList[i] <- noquote(paste(x[i],x[i+1]))
}
}
return(switchList)
}
switch(v)
switch <- function(x) {
switchList = list()
h <- unlist(dat["H"])
x <- as.integer((c(0, h, 0) == 0))
for (i in 1:length(x)){
if (!is.null(x[i+1]) && x[i+1] != '')
#if (x[i] != x[i+1]){
switchList[i] <- noquote(paste(x[i],x[i+1]))
}
}
return(switchList)
switch <- function(x) {
switchList = list()
h <- unlist(dat["H"])
x <- as.integer((c(0, h, 0) == 0))
for (i in 1:length(x)){
if (!is.null(x[i+1]) && x[i+1] != '')
#if (x[i] != x[i+1]){
switchList[i] <- noquote(paste(x[i],x[i+1]))
}
#}
return(switchList)
}
switch(v)
switch <- function(x) {
switchList = list()
h <- unlist(dat["H"])
x <- as.integer((c(0, h, 0) == 0))
for (i in 1:length(x)){
if (x[i] != x[i+1] & (!is.null(x[i+1]) && x[i+1] != "NA")){
switchList[i] <- noquote(paste(x[i],x[i+1]))
}
}
return(switchList)
}
switch(v)
switch <- function(x) {
switchList = list()
h <- unlist(dat["H"])
x <- as.integer((c(0, h, 0) == 0))
for (i in 1:length(x)){
if (x[i] != x[i+1] & (!is.null(x[i+1]) && x[i+1] != 'NA')){
switchList[i] <- noquote(paste(x[i],x[i+1]))
}
}
return(switchList)
}
switch(v)
switch <- function(x) {
switchList = list()
h <- unlist(dat["H"])
x <- as.integer((c(0, h, 0) == 0))
for (i in 1:length(x)){
if (x[i] != x[i+1] & (!is.null(x[i+1]) && x[i+1] != ' ')){
switchList[i] <- noquote(paste(x[i],x[i+1]))
}
}
return(switchList)
}
switch(v)
switch <- function(x) {
switchList = list()
h <- unlist(dat["H"])
x <- as.integer((c(0, h, 0) == 0))
for (i in 1:length(x)){
if (x[i] != x[i+1] && (!is.null(x[i+1]) && x[i+1] != ' ')){
switchList[i] <- noquote(paste(x[i],x[i+1]))
}
}
return(switchList)
}
switch(v)
switch <- function(x) {
switchList = list()
h <- unlist(dat["H"])
x <- as.integer((c(0, h, 0) == 0))
for (i in 1:length(x)-1){
if (x[i] != x[i+1] & (!is.null(x[i+1]) && x[i+1] != ' ')){
switchList[i] <- noquote(paste(x[i],x[i+1]))
}
}
return(switchList)
}
switch(v)
switch <- function(x) {
switchList = list()
h <- unlist(dat["H"])
x <- as.integer((c(0, h, 0) == 0))
for (i in 1:(length(x)-1)){
if (x[i] != x[i+1] & (!is.null(x[i+1]) && x[i+1] != ' ')){
switchList[i] <- noquote(paste(x[i],x[i+1]))
}
}
return(switchList)
}
switch(v)
switch <- function(x) {
switchList = list()
h <- unlist(dat["H"])
x <- as.integer((c(0, h, 0) == 0))
for (i in 1:(length(x)-1)){
if (x[i] != x[i+1] & (!is.null(x[i+1]) && x[i+1] != ' ')){
switchList[i] <- noquote(paste(x[i],x[i+1]))
}
}
return(unlist(noquote(switchList)))
}
switch(v)
switch <- function(x) {
switchList = list()
h <- unlist(dat["H"])
x <- as.integer((c(0, h, 0) == 0))
for (i in 1:(length(x)-1)){
if (x[i] != x[i+1]){
switchList[i] <- noquote(paste(x[i],x[i+1]))
}
}
return(unlist(noquote(switchList)))
}
switch(v)
length(switch(v))
# write function random.streak() with binary sequence y as argument
random.streak = function(y) {
# first, randomly permute y and store in mixed.up.y
mixed.up.y = sample(y)
# then find longest streak of 1's in vector mixed.up.y
switch(mixed.up.y)
}
# replicate random.streak 100000 times, store in L
L = replicate(100000, random.streak(utley))
# tabulate values in L and plot
plot(table(L))
# superimpose line for 2006 season
abline(v=35, lwd=3)
text(37, 10000, "Utley")
random.streak = function(y) {
# first, randomly permute y and store in mixed.up.y
mixed.up.y = sample(y)
# then find longest streak of 1's in vector mixed.up.y
return(switch(mixed.up.y))
}
random.streak(utley)
random.streak(utley)
random.streak(utley)
longest.streak(utley)
switch <- function(x) {
switchList = list()
h <- unlist(dat["H"])
x <- as.integer((c(0, h, 0) == 0))
for (i in 1:(length(x)-1)){
if (x[i] != x[i+1]){
switchList[i] <- noquote(paste(x[i],x[i+1]))
}
}
return(length(unlist(noquote(switchList))))
}
switch(v)
# write function random.streak() with binary sequence y as argument
random.streak = function(y) {
# first, randomly permute y and store in mixed.up.y
mixed.up.y = sample(y)
# then find longest streak of 1's in vector mixed.up.y
return(switch(mixed.up.y))
}
L = replicate(10000, random.streak(utley))
# tabulate values in L and plot
plot(table(L))
longest.streak(utley)
switch <- function(x) {
switchList = list()
h <- unlist(dat["H"])
x <- as.integer((c(0, h, 0) == 0))
for (i in 1:(length(x)-1)){
if (x[i] != x[i+1]){
switchList[i] <- noquote(paste(x[i],x[i+1]))
}
}
return(length(unlist(noquote(switchList))))
}
longest.streak(utley)
switch(utley)
switches <- function(x) {
switchList = list()
h <- unlist(dat["H"])
x <- as.integer((c(0, h, 0) == 0))
for (i in 1:(length(x)-1)){
if (x[i] != x[i+1]){
switchList[i] <- noquote(paste(x[i],x[i+1]))
}
}
return(length(unlist(noquote(switchList))))
}
switches(utley)
switches <- function(x) {
switchList = list()
x <- as.integer((c(0, x, 0) == 0))
for (i in 1:(length(x)-1)){
if (x[i] != x[i+1]){
switchList[i] <- noquote(paste(x[i],x[i+1]))
}
}
return(length(unlist(noquote(switchList))))
}
switches(utley)
random.streak = function(y) {
# first, randomly permute y and store in mixed.up.y
mixed.up.y = sample(y)
# then find longest streak of 1's in vector mixed.up.y
return(switches(mixed.up.y))
}
random.streak(utley)
random.streak(utley)
random.streak(utley)
random.streak(utley)
random.streak(utley)
random.streak(utley)
random.streak(utley)
# replicate random.streak 100000 times, store in L
L = replicate(10000, random.streak(utley))
# tabulate values in L and plot
plot(table(L))
abline(v=62, lwd=3)
text(62, 10000, "Utley")
abline(v=62, lwd=3, col="blue")
text(62,"Utley")
hist(L)
# superimpose line for 2006 season
abline(v=62, lwd=3, col="blue")
sam <- runif(1000, 10, 11.5)
annie <- runif(1000, 10.5, 12)
sam <- runif(1000, 10, 11.5)
annie <- runif(1000, 10.5, 12)
# We want the probability P(A < S) which is estimated
# by the proportion of simulated pairs (a,s) where a is
# smaller than s
prob <- sum(annie < sam) / 1000
prob
# shaded area shows a < s
plot(sam, annie)
polygon(c(10.5, 11.5, 11.5, 10.5),
c(10.5, 10.5, 11.5, 10.5), density = 10, angle = 135)
sqrt(prob * (1 - prob) / 1000)
difference <- annie - sam
difference
mc.est <- mean(difference)
mc.est
se.est <- sd(difference) / sqrt(1000)
c(mc.est, se.est)
m <- 1000
g <- numeric(m)
for (i in 1:m) {
x <- rnorm(2)
g[i] <- abs(x[1] - x[2])
}
est
est
m <- 1000
g <- numeric(m)
for (i in 1:m) {
x <- rnorm(2)
g[i] <- abs(x[1] - x[2])
}
est <- mean(g)
est
n <- 20
m <- 1000
tmean <- numeric(m)
for (i in 1:m) {
x <- sort(rnorm(n)) # sort n is vector of 20
tmean[i] <- sum(x[2:(n-1)]) / (n-2) # trim off first and last
}
mse <- mean(tmean^2)
mse
sqrt(sum((tmean - mean(tmean))^2))
sqrt(sum((tmean - mean(tmean))^2)) / m
